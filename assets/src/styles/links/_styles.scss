@use '../susanoo-functions' as susanoo;
@use 'variables' as variables;
@use 'animations';

a:not([class]) {
    color: var(--color-primary);
}

a {
    text: {
        decoration: none;
    }
}

a,
button,
input,
textarea {
    --outline-size: max(2px, 0.08em);
    --outline-style: solid;
    --outline-color: currentColor;

    &:focus {
        outline: var(--outline-size) var(--outline-style) var(--outline-color);
        outline-offset: var(--outline-size);
    }

    &:focus:not(:focus-visible) {
        outline: none;
    }

    &:focus-visible {
        outline: var(--outline-size) var(--outline-style) var(--outline-color);
        outline-offset: var(--outline-size);
    }
}

.link {
    display: inline-block;
    position: relative;
    color: variables.$color-links;
    font: {
        weight: var(--font-weight-bold);
    }
    padding: susanoo.rem-calc(10);
    transition: color .2s ease-in-out, background-color .2s ease-in-out;
    &::before {
        content: "";
        position: absolute;
        left: 0;
        bottom: 6px;
        width: 0;
        height: 3px;
        background: {
            color: variables.$before-background-color;
        }
        transition: all .25s cubic-bezier(.694,.048,.335,1)
    }
    &::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: 6px;
        width: 0;
        height: 3px;
        background: {
            color: variables.$after-background-color;
        }
        transition: width .75s cubic-bezier(.694,.048,.335,1) .15s, left .75s ease;
    }
    &:hover {
        color: var(--color-on-primary);
        &::before {
            width: 100%;
        }
        &::after {
            width: 100%;
            animation: hoverAnimation .65s cubic-bezier(.694,.048,.335,1) .15s;
        }
    }
    &.disabled {
        pointer-events: none;
        background: {
            color: variables.$disabled-color;
        }
        opacity: 0.4;
        &:hover {
            color: variables.$disabled-hover-color;
        }
    }
}